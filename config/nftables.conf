#!/usr/bin/nft -f

# IPv4/IPv6 Simple & Safe firewall ruleset.
# More examples in /usr/share/nftables/ and /usr/share/doc/nftables/examples/.

# start from a clean slate
flush ruleset

# simple rate limiting and protection against bad packets
# see https://www.procustodibus.com/blog/2021/11/wireguard-nftables/ for more
table netdev drop-bad-packets {
    chain ingress {
        # drop tcp "xmas" packets (bad flag combo)
        tcp flags & (fin | psh | urg) == fin | psh | urg drop
        # drop tcp packets with no flags
        tcp flags & (fin | syn | rst | psh | ack | urg) == 0x0 drop
        # drop tcp packets with mss below minimum
        tcp flags syn tcp option maxseg size 1-535 drop
    }

    chain ingress-eth0 {
        type filter hook ingress device "ens3" priority -450; policy accept;
        goto ingress
    }
}
table inet drop-bad-ct-states {
    chain prerouting {
        type filter hook prerouting priority -150; policy accept;

        # drop packets in "invalid" connection-tracking state
        ct state invalid drop
        # drop tcp packets for new connections that aren't syn packets
        ct state new tcp flags & (fin | syn | rst | ack) != syn drop
        # drop new connections over rate limit
        ct state new limit rate over 1/second burst 10 packets drop
    }
}

define wg_port = 51822

table inet filter {
  chain input {
    type filter hook input priority filter
    policy drop

    ct state invalid drop comment "early drop of invalid connections"
    ct state {established, related} accept comment "allow tracked connections"
    iifname lo accept comment "allow from loopback"
    ip protocol icmp accept comment "allow icmp"
    meta l4proto ipv6-icmp accept comment "allow icmp v6"
    tcp dport 7022 accept comment "allow sshd"
    tcp dport 80 accept comment "allow http"
    tcp dport 443 accept comment "allow https"

    iif "ens3" udp dport $wg_port accept
    iifname "wg0" accept
  }
  chain forward {
    type filter hook forward priority filter
    policy drop
  }
}